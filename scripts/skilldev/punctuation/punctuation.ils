;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;  punctuation.ils: punctuation class 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
defclass( punctuation (polygon2)
	  ( 
		( val @reader getVal @writer setVal ) 
		( width @reader getWidth @writer setWidth )
		( height @reader getHeight @writer setHeight )
		( scale @reader getScale @writer setScale )
		( cAngleBracketOpen )
		( cAngleBracketClose )
                ( cBracketClose )
		( cParenthClose )
		( cColon )
		( cComma )
		( cDash )
		( cDot )
		( cEqual )
		( cPound )
		( cHat )
		( cBracketOpen )
		( cParenthOpen )
                ( cPercent )
                ( cQuote )
                ( cPlus )
                ( cQuestion )
                ( cSemiColon )
                ( cSlashBackward )
                ( cSlashForward )
		( cStar )
		( cUnderscore )
		( cBug )								
	  )
);defClass
;#####################################################
; Class constructor
; This method initializes the class
;#####################################################
defmethod( initializeInstance @after ((obj punctuation))  
	   obj->val = nil
	   obj->width = nil
	   obj->height = nil
	   obj->scale = 1.0
	   obj->cAngleBracketOpen  = list(list(7.6 0.0) 
			                  list(8.4 0.0) 
			             	  list(8.4 2.4) 
			             	  list(7.6 2.4) 
			   	     	  list(2.4 7.6)
			   	     	  list(2.4 8.4) 
			   	     	  list(7.6 13.6) 
			   	     	  list(8.4 13.6) 
			   	     	  list(8.4 16.0) 
			   	     	  list(7.6 16.0)
			   	     	  list(0.0 8.4) 
			   	     	  list(0.0 7.6))
	   obj->cAngleBracketClose = list(list(0.8 0.0) 
		                          list(8.4 7.6) 
		           		  list(8.4 8.4) 
			   		  list(0.8 16.0) 
			   		  list(0.0 16.0)
			   		  list(0.0 13.6) 
			   		  list(0.8 13.6) 
			   		  list(6.0 8.4) 
			   		  list(6.0 7.6)
			   		  list(0.8 2.4)
			  		  list(0.0 2.4)	
			   		  list(0.0 0.0))
	   obj->cBracketClose = list(list(4.4 0.0) 
			             list(4.4 20.0) 
			  	     list(0.0 20.0) 
			  	     list(0.0 17.2) 
			  	     list(1.2 17.2)
			  	     list(1.2 2.8) 
			  	     list(0.0 2.8) 
			  	     list(0.0 0.0))			  
	   obj->cParenthClose = list(list(2.8 0.0) 
			      	     list(5.2 2.4) 
			 	     list(5.2 17.6) 
			  	     list(2.8 20.0) 
			  	     list(0.0 20.0)
			  	     list(0.0 17.2) 
			  	     list(1.2 16.0) 
			  	     list(1.2 4.0) 
			  	     list(0.0 2.8) 
			  	     list(0.0 0.0))
	   obj->cColon = list(list(1.2 0.0) 
			      list(3.2 0.0) 
			      list(4.4 1.2) 
			      list(4.4 3.2) 
		              list(3.2 4.4)
			      list(1.2 4.4) 
			      list(0.0 3.2) 
		              list(0.0 1.2))
	   obj->cComma = list(list(2.4 0.0) 
			      list(4.8 2.4) 
			      list(4.8 8.8) 
			      list(0.8 8.8) 
			      list(0.0 8.0)
			      list(0.0 4.8) 
			      list(0.8 4.0) 
			      list(1.6 4.0) 
			      list(1.6 3.2) 
			      list(0.0 1.6)
			      list(0.0 0.0))
	   obj->cDash = list(list(0.0 8.0) 
			     list(12.4 8.0) 
			     list(12.4 12.0) 
			     list(0.0 12.0))
	   obj->cDot = list(list(1.2 0.0) 
			    list(2.8 0.0) 
			    list(4.0 1.2) 
			    list(4.0 2.8) 
			    list(2.8 4.0)
		            list(1.2 4.0) 
			    list(0.0 2.8) 
			    list(0.0 1.2))
	   obj->cEqual = list(list(0.0 0.0) 
		     	      list(12.0 0.0) 
			      list(12.0 3.2) 
			      list(0.0 3.2))
	   obj->cPound = list(list(0.0 10.0) 
			      list(5.2 10.0) 
			      list(5.2 12.4) 
			      list(0.0 12.4))
	   obj->cHat = list(list(2.4 19.6) 
			    list(2.4 20.4) 
			    list(5.6 23.6) 
			    list(6.4 23.6) 
			    list(9.6 20.4)
			    list(9.6 19.6) 
			    list(12.0 19.6) 
			    list(12.0 20.4) 
			    list(6.4 26.0) 
			    list(5.6 26.0)
			    list(0.0 20.4)
			    list(0.0 19.6))
	   obj->cBracketOpen = list(list(4.4 0.0) 
			            list(4.4 2.8) 
			  	    list(3.2 2.8) 
			  	    list(3.2 17.2) 
			  	    list(4.4 17.2)
			  	    list(4.4 20.0) 
			  	    list(0.0 20.0) 
			  	    list(0.0 0.0))
	   obj->cParenthOpen = list(list(2.4 0.0) 
			            list(5.2 0.0) 
			       	    list(5.2 2.8) 
			       	    list(4.0 4.0) 
			       	    list(4.0 16.0)
				    list(5.2 17.2)
				    list(5.2 20.0)
				    list(2.4 20.0)
				    list(0.0 17.6)
				    list(0.0 2.4))
	   obj->cPercent = list(list(11.2 2.0) 
			        list(12.8 2.0) 
			  	list(14.0 3.2) 
			  	list(14.0 4.8) 
			  	list(12.8 6.0)
			  	list(11.2 6.0) 
			  	list(10.0 4.8) 
			  	list(10.0 3.2))
	   obj->cQuote = list(list(7.2 14.4) 
			      list(8.8 14.4) 
			      list(9.6 15.2) 
			      list(9.6 20.0) 
			      list(6.4 20.0)
			      list(6.4 15.2))
	   obj->cPlus = list(list(4.4 8.4) 
			     list(4.4 4.0) 
			     list(7.6 4.0) 
			     list(7.6 8.4) 
			     list(12.0 8.4)
			     list(12.0 11.6) 
			     list(7.6 11.6) 
			     list(7.6 16.0) 
			     list(4.4 16.0) 
			     list(4.4 11.6)
			     list(0.0 11.6) 
			     list(0.0 8.4))
	   obj->cQuestion = list(list(3.2 16.0) 
			         list(4.0 16.8) 
			  	 list(7.2 16.8) 
			  	 list(8.0 16.0) 
			  	 list(8.0 12.8)
			  	 list(7.2 12.0) 
			  	 list(3.2 12.0) 
			  	 list(3.2 6.0) 
			  	 list(6.4 6.0) 
			  	 list(6.4 9.6)
			  	 list(8.8 9.6)
				 list(10.8 11.6)
				 list(10.8 18.0)
				 list(8.8 20.0)
				 list(2.4 20.0)
				 list(0.0 17.6)
				 list(0.0 16.0))
	   obj->cSemiColon = list(list(1.6 0.0) 
			          list(4.0 2.4) 
			  	  list(4.0 7.2) 
			  	  list(0.8 7.2) 
			  	  list(0.0 6.4)
			  	  list(0.0 5.2) 
			  	  list(0.8 4.4) 
			  	  list(1.6 4.4) 
			  	  list(1.6 3.2) 
			  	  list(0.0 1.6)
			  	  list(0.0 0.0))
	   obj->cSlashBackward = list(list(12.0 2.8) 
			              list(12.0 0.0) 
			  	      list(16.0 0.0) 
			  	      list(16.0 4.8) 
			  	      list(4.0 16.8)
			  	      list(4.0 20.0) 
			  	      list(0.0 20.0) 
			  	      list(0.0 14.8))
	   obj->cSlashForward = list(list(4.0 0.0) 
			             list(4.0 2.8) 
			  	     list(16.0 14.8) 
			  	     list(16.0 20.0) 
			  	     list(12.0 20.0)
			  	     list(12.0 16.8) 
			  	     list(0.0 4.8) 
			  	     list(0.0 0.0))
	   obj->cStar = list(list(2.4 8.4) 
			     list(0.8 6.8) 
			     list(2.8 4.8) 
			     list(4.4 6.4) 
			     list(4.4 4.0)
			     list(7.6 4.0) 
			     list(7.6 6.4) 
			     list(9.2 4.8) 
			     list(11.2 6.8) 
			     list(9.6 8.4)
			     list(12.0 8.4) 
			     list(12.0 11.6) 
			     list(9.6 11.6) 
			     list(11.2 13.2) 
			     list(9.2 15.2)
			     list(7.6 13.6) 
			     list(7.6 16.0) 
			     list(4.4 16.0) 
			     list(4.4 13.6) 
			     list(2.8 15.2)
			     list(0.8 13.2) 
			     list(2.4 11.6) 
			     list(0.0 11.6) 
			     list(0.0 8.4))
	   obj->cUnderscore = list(list(0.0 0.0) 
			           list(12.4 0.0) 
			  	   list(12.4 4.0) 
			  	   list(0.0 4.0))
	   obj->cBug = list(list(9.0 0.0) 
			    list(7.0 0.0) 
			    list(7.0 4.1) 
			    list(6.1 5.0) 
			    list(3.0 5.0)
			    list(3.0 7.0) 
			    list(6.9 7.0) 
			    list(7.0 7.9) 
			    list(7.0 9.1) 
			    list(6.9 10.0)
			    list(2.0 10.0) 
			    list(2.0 0.0)
			    list(0.0 0.0)
			    list(0.0 12.0)
			    list(6.9 12.0)
			    list(9.0 9.9)
			    list(9.0 7.1)
			    list(7.9 6.0)
			    list(9.0 4.9))
);defmethod
;#####################################################
; Generates a symbol polygon
;#####################################################
defmethod( generate (( np punctuation ))
  let( (ret)
	   ret=nil
	   case(np->val
	       ("<"
	         ret=np->cAngleBracketOpen 
               )
	       (">"
	         ret=np->cAngleBracketClose
               )
	       ("]"
	         ret=np->cBracketClose
               )
	       (")"
	         ret=np->cParenthClose
               )
	       (":"
	         ret=np->cColon
               )
	       (","
	         ret=np->cComma
               )
	       ("-"
	         ret=np->cDash
               )
	       ("."
	         ret=np->cDot
               )
	       ("="
	         ret=np->cEqual
               )
	       ("^"
	         ret=np->cHat
               )
	       ("["
	         ret=np->cBracketOpen
               )
	       ("("
	         ret=np->cParenthOpen
               )
	       ("%"
	         ret=np->cPercent
               )
	       ("\""
	         ret=np->cQuote
               )
	       ("+"
	         ret=np->cPlus
               )
	       ("?"
	         ret=np->cQuestion
               )
	       (";"
	         ret=np->cSemiColon
               )
	       ("\\"
	         ret=np->cSlashBackward
               )
	       ("/"
	         ret=np->cSlashForward
               )
               ("*"
	         ret=np->cStar
               )
	       ("_"
	         ret=np->cUnderscore
               )
	       ("bug"
	         ret=np->cBug
               )
	       (t
	         ret=nil
	       )
	    );case
	    setVertices(np ret)
	    np->width  = maxx(np) - minx(np) 
	    np->height = maxy(np) - miny(np)
	    ret
  );let
);defmethod
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

